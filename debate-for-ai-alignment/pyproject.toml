[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
requires-python = ">=3.9"
name = "debate_for_ai_alignment"
readme = "README.md"
dynamic = ["version", "dependencies", "optional-dependencies"]

[project.scripts]
"debate-for-ai-alignment" = "debate_for_ai_alignment.__main__:main"

[project.entry-points."kedro.hooks"]

[tool.setuptools.dynamic]
version = {attr = "debate_for_ai_alignment.__version__"}
dependencies = {file = ["requirements.txt"]}
optional-dependencies = { docs = {file = ["requirements-docs.txt"]}, dev = {file = ["requirements-dev.txt"]}}

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.kedro]
package_name = "debate_for_ai_alignment"
project_name = "debate-for-ai-alignment"
kedro_init_version = "0.19.10"
tools = "['Linting', 'Testing', 'Custom Logging', 'Documentation', 'Data Structure', 'Kedro Viz']"
example_pipeline = "False"
source_dir = "src"

[tool.pytest.ini_options]
addopts = """
--cov-report term-missing \
--cov src/debate_for_ai_alignment -ra"""

[tool.coverage.report]
fail_under = 0
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff]
line-length = 88
show-fixes = true
select = [
    "F",   # Pyflakes
    "W",   # pycodestyle
    "E",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade
    "PL",  # Pylint
    "T201", # Print Statement
]
ignore = ["E501"]  # Ruff format takes care of line-too-long

[tool.kedro_telemetry]
project_id = "2449b977223e454f8121f0f10a8912a7"
